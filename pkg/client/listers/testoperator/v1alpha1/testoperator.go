/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/imcsk8/k8s-operators/pkg/apis/testoperator/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TestOperatorLister helps list TestOperators.
type TestOperatorLister interface {
	// List lists all TestOperators in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TestOperator, err error)
	// TestOperators returns an object that can list and get TestOperators.
	TestOperators(namespace string) TestOperatorNamespaceLister
	TestOperatorListerExpansion
}

// testOperatorLister implements the TestOperatorLister interface.
type testOperatorLister struct {
	indexer cache.Indexer
}

// NewTestOperatorLister returns a new TestOperatorLister.
func NewTestOperatorLister(indexer cache.Indexer) TestOperatorLister {
	return &testOperatorLister{indexer: indexer}
}

// List lists all TestOperators in the indexer.
func (s *testOperatorLister) List(selector labels.Selector) (ret []*v1alpha1.TestOperator, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TestOperator))
	})
	return ret, err
}

// TestOperators returns an object that can list and get TestOperators.
func (s *testOperatorLister) TestOperators(namespace string) TestOperatorNamespaceLister {
	return testOperatorNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TestOperatorNamespaceLister helps list and get TestOperators.
type TestOperatorNamespaceLister interface {
	// List lists all TestOperators in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TestOperator, err error)
	// Get retrieves the TestOperator from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TestOperator, error)
	TestOperatorNamespaceListerExpansion
}

// testOperatorNamespaceLister implements the TestOperatorNamespaceLister
// interface.
type testOperatorNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TestOperators in the indexer for a given namespace.
func (s testOperatorNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TestOperator, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TestOperator))
	})
	return ret, err
}

// Get retrieves the TestOperator from the indexer for a given namespace and name.
func (s testOperatorNamespaceLister) Get(name string) (*v1alpha1.TestOperator, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("testoperator"), name)
	}
	return obj.(*v1alpha1.TestOperator), nil
}
